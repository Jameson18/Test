package Lesson5;

import java.util.Arrays;
import java.util.Objects;

public class StringLesson {
    public static void main(String[] args) {
        /*
        char - Unicode —Å–∏–º–≤–æ–ª 16 –±–∏—Ç
        –æ—Ç 0 –¥–æ 65536 –∏ –æ—Ç '\u0000' to '\uffff'
         */
        char char1 = 'J'; // —Å–∞–º —Å–∏–º–≤–æ–ª –≤ –æ–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∫–æ–≤—ã—á–∫–∞—Ö
        char char2 = 74;// –Ω–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞
        char char3 = '\u0044';//—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∏—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        System.out.println(char1);
        System.out.println(char2);
        System.out.println(char3);

        System.out.println("\n–°—Ç—Ä–æ–∫–∏");
        //–°—Ç—Ä–æ–∫–∞ - —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤
        //–°—Ç—Ä–æ–∫–∏ - –æ–±—ä–µ–∫—Ç—ã (—Å—Å—ã–ª–æ—á–Ω—ã–µ), —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∞—Å—Å–æ–≤ String
        //–°—Ç—Ä–æ–∫–∏ –∑–∞–¥–∞—é—Ç—Å—è:
        // –≤ " ", –∏—Å–ø–æ–ª—å–∑—É—è new String() - –Ω–∞ –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π
        //–°—Ç—Ä–æ–∫–∏ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å, —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π
        //–í—Å–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã,
        //–Ω–∞–ø—Ä–∏–º–µ—Ä, System.out.println("\n–°—Ç—Ä–æ–∫–∏"); —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã
        //–∫–∞–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã String

        char[] jjdChars = {'\u004A', '\u004A', '\u0044',};
        String jjdString = new String(jjdChars);
        jjdString = "\u004A\u004A\u0044";
        System.out.println(jjdString);//JJD
        System.out.println(jjdString.length());//3
        System.out.println(jjdString.codePoints().count());//3

        char[] frogChars = {'\uD83D', '\uDC38'};
        String frogString = new String(frogChars);
        frogString = "\uD83D\uDC38";
        System.out.println(frogString);//üê∏
        System.out.println(frogString.length());//2
        System.out.println(frogString.codePoints().count());//1

        //—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–æ JAVA 9: –º–∞—Å—Å–∏–≤ char[] –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ UTF-16
        //–ø—Ä—Ä–∏ —ç—Ç–æ–º –∫–∞–∂–¥—ã–π char –±—ã–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω 2 –±–∞–π—Ç–∞–º–∏
        //–Ω–∞—á–∏–Ω–∞—è —Å JAVA 9(–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏): –º–∞—Å—Å–∏–≤ byte[] + –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-16 –∏–ª–∏ LATIN1

        System.out.println("–ü—É–ª —Å—Ç—Ä–æ–∫");
        // –ø—É–ª —Å—Ç—Ä–æ–∫ (–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ heap) —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É
        // –∫–æ–ø–∏—é –∫–∞–∂–¥–æ–≥–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞
        String string1 = "–°—Ç—Ä–æ–∫–∞";
        String string2 = "–°—Ç—Ä–æ–∫–∞";
        String string3 = new String("–°—Ç—Ä–æ–∫–∞");
        System.out.println(string1 == string2);
        System.out.println(string1 == string3);
        // –ø–æ–º–µ—â–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –ø—É–ª —Å—Ç—Ä–æ–∫ - –∏–Ω—Ç–µ—Ä–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!

        System.out.println("–ú–µ—Ç–æ–¥ intern()");
        String internStr = string3.intern();// —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –ø—É–ª–µ —Å—Ç—Ä–æ–∫/–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ
        //—Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
        System.out.println(string1 == internStr);//true
        System.out.println(string2 == internStr);//true
        System.out.println(string3 == internStr);//false

        System.out.println("—Å—Ç—Ä–æ–∫–∞".equalsIgnoreCase(string1));//true
        System.out.println("—Å—Ç—Ä–æ–∫–∞".equals(string1));//false


        String nullString = null;
        System.out.println(nullString == null);
        System.out.println(null == null);
        System.out.println(Objects.nonNull(nullString));//false
        System.out.println(Objects.isNull(nullString));//true

        String[] animals = {"–∫–æ—Ç", "–ø–µ—Å", "–≥—É—Å—å"};
        String[] animal = new String[animals.length * 2];
        for (int i = 0; i < animal.length; i++) {
            animal[i] = animals[(int) (Math.random() * animals.length)];
        }
        System.out.println(Arrays.toString(animal));
        //String.join(delimetr"^^^^", string1, string2, stringN);


        //–ë—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        String concatStr = "";
        for (int i = 0; i < 10; i++) {
            concatStr += i + " ";
        }
        System.out.println(concatStr);
        //StringBuilder - —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ, –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–º
        //StringBuffer - —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–¥–ª–µ–Ω–µ–µ, –Ω–æ –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–µ–Ω
        StringBuilder sb = new StringBuilder(string1);
        sb.append(" :: ").append(string2);
        System.out.println(sb.toString());

        concatStr = "";
        sb = new StringBuilder();
        for (int i = 0; i < 10; i++) {
            sb.append(i).append(" ");
        }concatStr = sb.toString();
        System.out.println(concatStr);

        //—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
        string1 = "–°—Ç—Ä–æ–∫–∞";
        string2 = "–°—Ç—Ä–æ–∫–∞";
        System.out.println();
        System.out.println(string1.compareTo(string2));
        System.out.println("—Å—Ç—Ä–æ–∫–∞".equalsIgnoreCase("–°—Ç—Ä–æ–∫–∞"));
        System.out.println("—Å—Ç—Ä–æ–∫–∞".compareTo("–°—Ç—Ä–æ–∫–∞"));
        System.out.println("—Å—Ç—Ä–æ–∫–∞".compareTo("—Å—Ç—Ä–æ–∫–∞"));
        System.out.println("–°—Ç—Ä–æ–∫–∞".compareTo("—Å—Ç—Ä–æ–∫–∞"));
        System.out.println("—Å—Ç—Ä–æ–∫–∞".compareToIgnoreCase("–°—Ç—Ä–æ–∫–∞"));
        string1 = "JJD";
        System.out.println(string1.startsWith("JJ"));//true
        System.out.println(string1.endsWith("D"));//true
        System.out.println(string1.startsWith("D",2));//true
        //–ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
        string1 = string1.toLowerCase();
        System.out.println(string1);
        string1 = string1.toUpperCase();
        System.out.println(string1);
        //–∑–∞–º–µ–Ω–∞
        string1 = string1.replace("D","!");
        System.out.println(string1);
        string1 = string1.replaceAll("J","!");//–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
        System.out.println(string1);
        string1 = string1.replaceFirst("!", "J");
        System.out.println(string1);
        string1 = "JJD";
        System.out.println(string1.contains("D"));
        string1 = "JAVA PYTHON P HP";
        String[] strings = string1.split(" ");
        System.out.println(Arrays.toString(strings));

        //—É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã trim/strip/stripLeading/stripTrailing
        //trim —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ \u0020
        //strip —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –≤–æ–æ–±—â–µ
        //stripLeading —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ —É–±–∏—Ä–∞–µ—Ç
        //stripTrailing  —Å –∫–æ–Ω—Ü–∞ —É–±–∏—Ä–∞–µ—Ç
        string1 = "–û J K";
        System.out.println(string1.strip());
    }
}
